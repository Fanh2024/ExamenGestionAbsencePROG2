openapi: 3.0.0
info:
  title: Student Management API
  description: API for managing students and their absence records.
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local server
paths:
  /students:
    get:
      summary: Get a list of all students
      tags:
        - Students
      responses:
        '200':
          description: A list of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'
    post:
      summary: Create a new student
      tags:
        - Students
      requestBody:
        description: Student object that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student created successfully
        '400':
          description: Invalid input
  /students/{id}:
    get:
      summary: Get a student by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the student to retrieve
          schema:
            type: integer
      responses:
        '200':
          description: A student object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'
        '404':
          description: Student not found
    put:
      summary: Update an existing student
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the student to update
          schema:
            type: integer
      requestBody:
        description: Updated student object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Student updated successfully
        '400':
          description: Invalid input
        '404':
          description: Student not found
    delete:
      summary: Delete a student by ID
      tags:
        - Students
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the student to delete
          schema:
            type: integer
      responses:
        '204':
          description: Student deleted successfully
        '404':
          description: Student not found
components:
  schemas:
    Student:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the student
        firstName:
          type: string
          description: First name of the student
        lastName:
          type: string
          description: Last name of the student
        email:
          type: string
          description: Email address of the student
        birthDate:
          type: string
          format: date
          description: Birthdate of the student
        group:
          type: string
          description: Group of the student (e.g., J1, J2, H1, H2)
        className:
          type: string
          description: Class name of the student (e.g., L1, L2)
        unjustifiedAbsencesCount:
          type: integer
          description: Number of unjustified absences for the student
        CORStatus:
          type: string
          description: COR process status (Convocation, Observation, Renvoi)
        CORStartDate:
          type: string
          format: date
          description: Start date of the COR process
        absences:
          type: array
          items:
            $ref: '#/components/schemas/Absence'
    Absence:
      type: object
      properties:
        id:
          type: integer
          description: Unique identifier for the absence
        absenceDate:
          type: string
          format: date
          description: Date of the absence
        justified:
          type: boolean
          description: Whether the absence is justified
        reason:
          type: string
          description: Reason for the absence if justified
        validatedBySupervisor:
          type: boolean
          description: Whether the absence has been validated by a supervisor
